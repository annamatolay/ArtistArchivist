plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
}

android {
    namespace 'dev.anmatolay.artistarchivist'
    compileSdk 33

    defaultConfig {
        applicationId "dev.anmatolay.artistarchivist"
        minSdk 27
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testBuildType "debugTest"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables {
            useSupportLibrary true
        }

        resValue 'string', 'app_name', 'ArtistArchivist'

        signingConfigs {
            release {
                signingConfig signingConfigs.debug
            }
        }
    }

    buildTypes {
        def musicbrainzApiUrl = '"https://musicbrainz.org/ws/2/"'

        all{
            buildConfigField "String", "CONTACT_EMAIL", '"anmatolay@gmail.com"'
        }

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            debuggable true
            buildConfigField "String", "API_URL", musicbrainzApiUrl
        }
        debugTest {
            initWith debug
            buildConfigField "String", "API_URL", '"http://localhost:8080/"'
        }
        release {
            debuggable false
//            minifyEnabled true TODO
//            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "API_URL", musicbrainzApiUrl
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
        buildConfig = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.4'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
    // For KSP
    applicationVariants.configureEach { variant ->
        kotlin.sourceSets {
            getByName(name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }
}

dependencies {
    def koin_version = "3.4.2"
    def koin_test_version = "3.4.1"
    def koin_ksp_version = "1.2.2"
    def coroutines_version = "1.6.4"
    def okhttp3_version = "4.10.0"
    def moshi_version = "1.14.0"
    def retrofit_version = "2.9.0"

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation platform('androidx.compose:compose-bom:2023.06.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    // 3rd-party
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"
    implementation "io.insert-koin:koin-annotations:$koin_ksp_version"
    ksp("io.insert-koin:koin-ksp-compiler:$koin_ksp_version")
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    ksp("com.squareup.moshi:moshi-kotlin-codegen:$moshi_version")

    testImplementation 'junit:junit:4.13.2'
    testImplementation "io.insert-koin:koin-test-junit4:$koin_test_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okhttp3_version"
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}

android.applicationVariants.all { variant ->
    def appName = variant.mergedFlavor.resValues.get('string/app_name').getValue()

    buildConfigField "String", "APP_NAME", "\"$appName\""

    if (variant.buildType.name != "release") {
        if (variant.buildType.name == "debugTest") {
            appName ="TEST-$appName"
        } else {
            appName = "${variant.buildType.name.toUpperCase()}-$appName"
        }
    }
    variant.resValue 'string', 'app_name', appName
}